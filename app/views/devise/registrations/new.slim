.reservation
  .gap
  .first_line.wow.fadeInDown
  .first_title.wow.fadeInDown
    p = t('speaker_registration')
  = form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f|
    .col-lg-8.col-lg-offset-0.wow.fadeInLeft
      - if resource.errors.any?
        #error_explanation style ='color: red'
          ul
            - for msg in resource.errors.full_messages
              li = msg
    = f.text_field :first_name, placeholder: t('user_params.first_name'), class: 'wow fadeInLeft'
    = f.text_field :last_name, placeholder: t('user_params.last_name'), class: 'wow fadeInRight'
    = f.text_field :middle_name, placeholder: t('user_params.middle_name'), class: 'wow fadeInLeft'
    = f.text_field :country, placeholder: t('user_params.country'), class: 'wow fadeInRight'
    = f.text_field :city, placeholder: t('user_params.city'), class: 'wow fadeInLeft'
    = f.text_field :phone, placeholder: t('user_params.phone'), class: 'wow fadeInRight'
    = f.email_field :email, placeholder: 'Email', class: 'wow fadeInLeft'
    = f.file_field :avatar, placeholder: t('user_params.avatar'), class: 'wow fadeInRight', accept: 'image/png, image/jpg, image/jpeg'
    = f.password_field :password, placeholder: "#{t('user_params.password')} (#{t('min_sym_to_password')})", autocomplete: 'off', class: 'wow fadeInRight'
    = f.password_field :password_confirmation, placeholder: t('user_params.password_confirmation'), autocomplete: 'off', class: 'wow fadeInLeft'
    = f.submit t('to_register'), class: 'reservation_button wow fadeInUp'
